> 每天一题，提神醒脑
* the solution of leetcode —余慧斌 2015-6-1
* 2019-11 自己五年前做了一些题目，现在趁着学习的时间，多做一些算法题，培养一下自己的能力

作者：穷码农
链接：https://zhuanlan.zhihu.com/p/98580817
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

[EASY]If you are just starting off, starting from easy problems is the best way to get in touch with your coding skills again, and/or build up new ones.As mentioned by other users, it’s better to have a breadth-first approach to easy problems. Pick 5-6 questions from each topic and try to master the basics of the topic.I did a depth first of all the easy ones but looking back I feel it’s better to move to the next topic once you feel confident in one.The purpose of the easy questions is to
ingrain the basic concepts of a particular data structure or algorithm and if you look closely you will find a lot of questions asking for solutions testing your ability/understanding of language syntax, data structure core basics,etc, basically the “dirty” work, we so often don’t give due attention. Leverage the same and get your hand dirty.You will also find a healthy mix of the use of two-three data structures or algorithms in some problems. Look for such problems, for they are a great way to
test your understanding of how more than one DS work together to build a beautiful solution.That being said, I would recommend moving from the “easy” phase as soon as possible, for its the mediums that will be asked mostly in interviews.Must-do Easy questions [ Download the list here ] :13. Roman to Integer20. Valid Parentheses21. Merge Two Sorted Lists141. Linked List Cycle155. Min Stack169. Majority Element202. Happy Number204. Count Primes242. Valid Anagram371. Sum of Two Integers88. Merge
Sorted Array108. Convert Sorted Array to Binary Search Tree189. Rotate Array205. Isomorphic Strings226. Invert Binary Tree448. Find All Numbers Disappeared in an Array572. Subtree of Another Tree557. Reverse Words in a String III589. N-ary Tree Preorder Traversal605. Can Place Flowers617. Merge Two Binary Trees665. Non-decreasing Array669. Trim a Binary Search Tree674. Longest Continuous Increasing Subsequence703. Kth Largest Element in a Stream705. Design HashSet852. Peak Index in a Mountain
Array1160. Find Words That Can Be Formed by Characters[MEDIUM]Once you feel confident enough with the basics, you can move onto the medium ones. Medium problems are pivotal in interview preparation since any decent interview will have at least one instance of medium problems. Moreover some of the advanced data structures and algos like graph, backtracking, dynamic programming are not well covered in the easy section, so the medium problems are a good stop to learn them.Again, breadth-first
approach works wonder in this case as well. Pick like 10 problems from each topic, try to solve them to the best of your capabilities and practise of easy problems, and if you find it difficult to solve at first, take help from the discussion forum.What's important to note is the purpose of you doing N number of problems, should solely be to learn new techniques, be able to apply the learnt technique in similar problems later, and learn the basics of advanced data structure that you might have
missed in the easy section.It's normal to not be able to solve medium level problems at first. Don't feel bad about taking help from the discussion forum, but try to learn the techniques as much as you can.Do not cram the solution. There is no point hoping you will remember the solution in an actual interview, because in a pressure situation it's not advisable to rely just on your memory. Rather place your bets on your acquired skills.While you are solving questions of a particular topic, make
sure to give the theory a good read before or during the process of solving questions. It's important to know the basics of implementations of various data structures and algorithms like graph traversals, backtracking, memoization, trees, binary search etc. There are various resources available for the same, geeksforgeeks, Cracking the Coding Interview, Tushar Roy's lectures, Back To Back SWE, to name a few.Once you feel fairly confident after say, 60-70 mediums, it's always a good idea to start
giving contests. Contests not only simulate the actual interview scenarios by having a time constraint, they also test your ability to be able to come up with solutions on your own without taking help from any other resources.Keep looking at better solutions posted by other users, compare your solution with them in terms of time and space complexities, know when to make the tradeoff between the two and ask for help whenever you feel stuck. Be open to learning and the rest will fall in place.A
comprehensive list of must-do medium problems [ Download the list here ]:5. Longest Palindromic Substring11. Container With Most Water17. Letter Combinations of a Phone Number22. Generate Parentheses33. Search in Rotated Sorted Array34. Find First and Last Position of Element in Sorted Array46. Permutations24. Swap Nodes in Pairs48. Rotate Image49. Group Anagrams56. Merge Intervals75. Sort Colors94. Binary Tree Inorder Traversal102. Binary Tree Level Order Traversal106. Construct Binary Tree
from Inorder and Postorder Traversal117. Populating Next Right Pointers in Each Node II142. Linked List Cycle II150. Evaluate Reverse Polish Notation151. Reverse Words in a String166. Fraction to Recurring Decimal179. Largest Number200. Number of Islands207. Course Schedule208. Implement Trie (Prefix Tree)215. Kth Largest Element in an Array236. Lowest Common Ancestor of a Binary Tree300. Longest Increasing Subsequence328. Odd Even Linked List338. Counting Bits347. Top K Frequent Elements355.
Design Twitter417. Pacific Atlantic Water Flow421. Maximum XOR of Two Numbers in an Array424. Longest Repeating Character Replacement454. 4Sum II529. Minesweeper525. Contiguous Array658. Find K Closest Elements763. Partition Labels767. Reorganize String1171. Remove Zero Sum Consecutive Nodes from Linked List
